// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asecurityteam/go-vpcflow (interfaces: BucketIterator)

// nolint
package vpcflow

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBucketIterator is a mock of BucketIterator interface
type MockBucketIterator struct {
	ctrl     *gomock.Controller
	recorder *MockBucketIteratorMockRecorder
}

// MockBucketIteratorMockRecorder is the mock recorder for MockBucketIterator
type MockBucketIteratorMockRecorder struct {
	mock *MockBucketIterator
}

// NewMockBucketIterator creates a new mock instance
func NewMockBucketIterator(ctrl *gomock.Controller) *MockBucketIterator {
	mock := &MockBucketIterator{ctrl: ctrl}
	mock.recorder = &MockBucketIteratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBucketIterator) EXPECT() *MockBucketIteratorMockRecorder {
	return m.recorder
}

// Close mocks base method
func (m *MockBucketIterator) Close() error {
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockBucketIteratorMockRecorder) Close() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockBucketIterator)(nil).Close))
}

// Current mocks base method
func (m *MockBucketIterator) Current() LogFile {
	ret := m.ctrl.Call(m, "Current")
	ret0, _ := ret[0].(LogFile)
	return ret0
}

// Current indicates an expected call of Current
func (mr *MockBucketIteratorMockRecorder) Current() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Current", reflect.TypeOf((*MockBucketIterator)(nil).Current))
}

// Iterate mocks base method
func (m *MockBucketIterator) Iterate() bool {
	ret := m.ctrl.Call(m, "Iterate")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Iterate indicates an expected call of Iterate
func (mr *MockBucketIteratorMockRecorder) Iterate() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Iterate", reflect.TypeOf((*MockBucketIterator)(nil).Iterate))
}
